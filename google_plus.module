<?php

/**
 * TODO:
 * 1. Add custom field for Google+ profile links to Drupal Google+ profile view.
 * 3. Add support for custom menu item for grabbing the access token.
 * 2. Create activity stream.
 * 4. Support for blocks.
 * 5. Views integration.
 * 6. Caching
 * 7. AJAXify
 */

function google_plus_form_alter(&$form, &$form_state, &$form_id) {
	if (isset($form['#user'])) {
    $user = user_load($form['#user']->uid);
  }

	if ($form_id == 'user_profile_form') {
		$form['google_plus'] = array(
      '#type' => 'fieldset',
      '#title' => 'Google+ Settings',
      '#collapsible' => TRUE,
      '#collapsed' => FALSE,
    );

		$form['google_plus']['client_id'] = array(
			'#type' => 'textfield',
      '#title' => t('Client ID'),
      '#default_value' => !empty($user->data['google_plus']['client_id']) ? $user->data['google_plus']['client_id'] : '',
		);

		$form['google_plus']['client_secret'] = array(
      '#type' => 'textfield',
      '#title' => t('Client Secret'),
      '#default_value' => !empty($user->data['google_plus']['client_secret']) ? $user->data['google_plus']['client_secret'] : '',
    );

		$form['google_plus']['api_key'] = array(
      '#type' => 'textfield',
      '#title' => t('API Key'),
      '#default_value' => !empty($user->data['google_plus']['api_key']) ? $user->data['google_plus']['api_key'] : '',
    );

		$form['google_plus']['profile'] = array(
      '#type' => 'fieldset',
      '#title' => 'Google+ Profile Details',
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
    );

		$form['google_plus']['profile']['id'] = array(
      '#type' => 'textfield',
      '#title' => t('Profile ID'),
      '#default_value' => !empty($user->data['google_plus']['id']) ? $user->data['google_plus']['id'] : '',
			'#attributes' => array('disabled' => 'disabled'),
    );

		$form['google_plus']['profile']['url'] = array(
      '#type' => 'textfield',
      '#title' => t('Profile URL'),
      '#default_value' => !empty($user->data['google_plus']['url']) ? $user->data['google_plus']['url'] : '',
			'#attributes' => array('disabled' => 'disabled'),
    );

		$form['#submit'][] = 'google_plus_user_profile_submit';
	}
}

function google_plus_user_profile_submit($form, $form_state) {
	if (isset($form['#user'])) {
    $user = user_load($form['#user']->uid);
		$plus = $user->data['google_plus'];

		if ($plus['client_id'] != $form_state['values']['client_id']) {
		  $user->data['google_plus']['client_id'] = $form_state['values']['client_id'];
			$ch = 1;
		}

		if ($plus['client_secret'] != $form_state['values']['client_secret']) {
		  $user->data['google_plus']['client_secret'] = $form_state['values']['client_secret'];
			$ch = 1;
		}

		if ($plus['api_key'] != $form_state['values']['api_key']) {
		  $user->data['google_plus']['api_key'] = $form_state['values']['api_key'];
			$ch = 1;
		}

		if (isset($ch)) {
	  	user_save($user);
			google_plus_authorize();
		}
  }
}

function google_plus_prepare_client($uid = NULL) {
	if ($uid) {
		$user = user_load($uid);
	} else {
		global $user;
	}

	$client = new apiClient();
  $client->setApplicationName(variable_get('google_plus_product_name', variable_get('site_name')));

  $client->setClientId($user->data['google_plus']['client_id']);
  $client->setClientSecret($user->data['google_plus']['client_secret']);
  $client->setRedirectUri(variable_get('google_plus_redirect_uri', ''));
  $client->setDeveloperKey($user->data['google_plus']['api_key']);

  $client->setScopes(array('https://www.googleapis.com/auth/plus.me'));

	return $client;
}

function google_plus_authorize() {
	global $user;

	$client = google_plus_prepare_client($user->uid);
	$plus = new apiPlusService($client);

	$authUrl = $client->createAuthUrl();
	drupal_goto($authUrl);
}

function google_plus_get_access_token() {
	if (isset($_GET['code'])) {
		global $user;

		$client = google_plus_prepare_client($user->uid);
		$plus = new apiPlusService($client);

  	$client->authenticate();
	  $user->data['google_plus']['access_token'] = $client->getAccessToken();

    $me = $plus->people->get('me');
		$user->data['google_plus']['id'] = $me['id'];
		$user->data['google_plus']['url'] = $me['url'];

		user_save($user);

		drupal_set_message(t('Your Google+ authentication token has been successfully saved.'));
		drupal_goto('user/' . $user->uid . '/edit');

	} elseif (isset($_GET['error'])) {

		$options['query'] = array(
			'google_plus_error' => $_GET['error'],
		);
		drupal_goto('google_plus/access_token', $options);

	} elseif (isset($_GET['google_plus_error'])) {

		drupal_set_message(t('You denied access to your own Google+ account.'), 'error');
		return '';

	}
}

function google_plus_permission() {
  return array(
    'access google plus' => array(
      'title' => t('Access Google+'),
    ),
    'administer google plus' => array(
      'title' => t('Administer Google+'),
    ),
	);
}

function google_plus_menu() {
	$items = array();

	$items['user/%/google_plus/profile'] = array(
		'title' => t('Google+ Profile'),
    'description' => t('Shows Google+ profile of the logged in user.'),
    'page callback' => 'google_plus_profile',
    'page arguments' => array(1),
    'access arguments' => array('access google plus'),
    'type' => MENU_LOCAL_TASK,
	);

	$items['google_plus/access_token'] = array(
    'title' => t('Google+ Access Token'),
    'description' => t('Shows Google+ profile of the logged in user.'),
    'page callback' => 'google_plus_get_access_token',
    'page arguments' => array(),
    'access arguments' => array('access google plus'),
  );

	$items['admin/config/people/google_plus'] = array(
    'title' => t('Google+ Settings'),
    'description' => t('Configure site-wide settings for Google+.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('google_plus_admin'),
		'file' => 'google_plus.admin.inc',
    'access arguments' => array('administer google plus'),
	);

	return $items;
}

function google_plus_get_people($uid = NULL) {
	if ($uid) {
    $user = user_load($uid);
  } else {
    global $user;
  }

  $client = google_plus_prepare_client($user->uid);
  $plus = new apiPlusService($client);

  $client->setAccessToken($user->data['google_plus']['access_token']);

  if ($client->getAccessToken()) {
    return $plus->people->get('me');
	} else {
		return FALSE;
	}
}

function google_plus_profile($uid = NULL) {
	if ($uid) {
		$user = user_load($uid);
	} else {
		global $user;
	}

	$me = google_plus_get_people($user->uid);

	if ($me) {
		return theme('google_plus_personal_profile', array('me' => $me));
	} else {
		return 'Error!';
	}
}

function google_plus_theme() {
	$return_array = array(
    'google_plus_personal_profile' => array(
      'variables' => array(
				'me' => NULL,
			),
			'template' => 'google-plus-personal-profile',
    ),
  );

	return $return_array;
}

function google_plus_get_activity($id) {
	if (!$id) {
		return FALSE;
  }

	global $user;

  $client = google_plus_prepare_client($user->uid);
  $plus = new apiPlusService($client);

  $client->setAccessToken($user->data['google_plus']['access_token']);

  if ($client->getAccessToken()) {

    return $plus->activities->get($id);

  } else {
    return FALSE;
  }
}

function google_plus_list_activities($userId) {
	if (!$userId) {
		return FALSE;
  }

	global $user;

  $client = google_plus_prepare_client($user->uid);
  $plus = new apiPlusService($client);

  $client->setAccessToken($user->data['google_plus']['access_token']);

  if ($client->getAccessToken()) {

		$optParams = array('maxResults' => 100);
    return $plus->activities->listActivities($userId, 'public', $optParams);

  } else {
    return FALSE;
  }
}

function google_plus_block_info() {
	$blocks = array();

	$blocks['google_plus_activity'] = array(
		'info' => t('Google+ Activity'),
		'cache' => DRUPAL_NO_CACHE,
	);

	return $blocks;
}

function google_plus_block_view($block_name = '') {
	if ($block_name == 'google_plus_activity') {
		$activities = google_plus_list_activities(variable_get('google_plus_block_userid', NULL));
	
		$count = 0;
		$max = variable_get('google_plus_block_max_num', 10);	
		$list = array();
		foreach ($activities['items'] as $activity) {
			if ($count >= $max) {
				break;
			}
			$count++;

			if ($activity['title'] != '') {
				$list[] = array(l($activity['title'], $activity['url'], array('attributes' => array('target' => '_blank'))));
			} else {
				foreach ($activity['object']['attachments'] as $attachment) {
					if ($attachment['objectType'] == 'article') {
						$list[] = array(l($attachment['displayName'], $activity['url'], array('attributes' => array('target' => '_blank'))));
					}
				}
			}
		}

		$theme_args = array('items' => $list, 'type' => 'ul');

		$content = theme('item_list', $theme_args);

		$block = array(
			'subject' => t('Enabled Modules'),
			'content' => $content,
		);
		return $block;
	}
}

function google_plus_block_configure($delta = '') {
  $form = array();
  if ($delta == 'google_plus_activity') {
		$form['google_plus'] = array(
			'#type' => 'fieldset',
      '#title' => t('Google+ Block Settings'),
			'#collapsed' => FALSE,
	    '#collapsible' => TRUE,
		);

    $form['google_plus']['userid'] = array(
      '#type' => 'textfield',
      '#title' => t('User ID'),
      '#description' => t('Provide the userId of the Google+ account which is going to provide the public list of activities for this block.'),
      '#default_value' => variable_get('google_plus_block_userid', ''),
    );

    $form['google_plus']['max_num'] = array(
      '#type' => 'textfield',
      '#title' => t('Number of activities'),
      '#description' => t('Number of activities to show in this block. Latest activities will be shown.'),
      '#default_value' => variable_get('google_plus_block_max_num', 10),
    );
  }
  return $form;
}

function google_plus_block_save($delta = '', $edit = array()) {
  if ($delta == 'google_plus_activity') {
    variable_set('google_plus_block_userid', $edit['userid']);
    variable_set('google_plus_block_max_num', $edit['max_num']);
  }
  return;
}
